#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
PTL - Python Tools Library
简化的日常工具集合命令行版本
"""

import argparse
import hashlib
import base64
import urllib.parse
import datetime
import time
import sys


def md5_hash(text):
    """计算MD5哈希值"""
    return hashlib.md5(text.encode('utf-8')).hexdigest()


def sha256_hash(text):
    """计算SHA256哈希值"""
    return hashlib.sha256(text.encode('utf-8')).hexdigest()


def url_encode(text):
    """URL编码"""
    return urllib.parse.quote(text, safe='')


def url_decode(text):
    """URL解码"""
    return urllib.parse.unquote(text)


def base64_encode(text):
    """Base64编码"""
    return base64.b64encode(text.encode('utf-8')).decode('utf-8')


def base64_decode(text):
    """Base64解码"""
    try:
        return base64.b64decode(text).decode('utf-8')
    except Exception as e:
        return f"解码失败: {str(e)}"


def timestamp_to_datetime(timestamp):
    """时间戳转换为日期时间格式"""
    try:
        if len(str(int(float(timestamp)))) > 10:
            timestamp = float(timestamp) / 1000
        dt = datetime.datetime.fromtimestamp(float(timestamp))
        return dt.strftime('%Y-%m-%d %H:%M:%S')
    except Exception as e:
        return f"转换失败: {str(e)}"


def datetime_to_timestamp(datetime_str):
    """日期时间格式转换为时间戳"""
    try:
        formats = [
            '%Y-%m-%d %H:%M:%S',
            '%Y-%m-%d',
            '%Y/%m/%d %H:%M:%S',
            '%Y/%m/%d'
        ]
        
        for fmt in formats:
            try:
                dt = datetime.datetime.strptime(datetime_str, fmt)
                return str(int(dt.timestamp()))
            except ValueError:
                continue
        
        return "不支持的日期格式"
    except Exception as e:
        return f"转换失败: {str(e)}"


def show_help():
    """显示帮助信息"""
    help_text = """
PTL - Python Tools Library

用法:
  ptl <command> [input]

命令:
  md5 <text>              计算MD5哈希值
  sha256 <text>           计算SHA256哈希值
  url <text>              URL编码
  unurl <text>            URL解码
  b64 <text>              Base64编码
  unb64 <text>            Base64解码
  ts2dt <timestamp>       时间戳转日期时间
  dt2ts <datetime>        日期时间转时间戳
  now                     当前时间戳
  time                    当前日期时间
  help, -h, --help        显示此帮助信息

示例:
  ptl md5 "hello world"
  ptl sha256 "hello world"
  ptl url "hello world 中文"
  ptl b64 "hello world"
  ptl ts2dt 1640995200
  ptl dt2ts "2024-01-01 12:00:00"
  ptl now
"""
    print(help_text)


def main():
    """主函数"""
    if len(sys.argv) < 2:
        show_help()
        return
    
    command = sys.argv[1].lower()
    
    # 帮助命令
    if command in ['help', '-h', '--help']:
        show_help()
        return
    
    # 不需要输入的命令
    if command == 'now':
        print(int(time.time()))
        return
    elif command == 'time':
        print(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
        return
    
    # 需要输入的命令
    if len(sys.argv) < 3:
        print(f"错误: 命令 '{command}' 需要输入参数")
        print("使用 'ptl help' 查看帮助信息")
        return
    
    # 合并所有参数作为输入文本（支持包含空格的参数）
    input_text = ' '.join(sys.argv[2:])
    
    # 执行相应命令
    if command == 'md5':
        print(md5_hash(input_text))
    elif command == 'sha256':
        print(sha256_hash(input_text))
    elif command == 'url':
        print(url_encode(input_text))
    elif command == 'unurl':
        print(url_decode(input_text))
    elif command == 'b64':
        print(base64_encode(input_text))
    elif command == 'unb64':
        print(base64_decode(input_text))
    elif command == 'ts2dt':
        print(timestamp_to_datetime(input_text))
    elif command == 'dt2ts':
        print(datetime_to_timestamp(input_text))
    else:
        print(f"错误: 未知命令 '{command}'")
        print("使用 'ptl help' 查看所有可用命令")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n程序被用户中断")
        sys.exit(0)
    except Exception as e:
        print(f"程序出现错误: {str(e)}")
        sys.exit(1)